image: ubuntu

variables:
  MILESTONE: 6

build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends make cmake g++ libssl-dev libcurl4-openssl-dev ca-certificates
    - mkdir build && cd build
    - cmake -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc ..
    - cmake --build .
  artifacts:
    paths:
      - build/
    expire_in: 1 day
  only:
    - branches

test:
  stage: test
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends cmake libssl-dev libcurl4-openssl-dev ca-certificates
    - cd build
    - ctest --output-on-failure .
  dependencies:
    - build
  only:
    - branches

upload-artifacts:
  stage: deploy
  script:
    - chmod u+x build/SentimentAnalysis
  dependencies:
    - build
  artifacts:
    paths:
      - build/SentimentAnalysis
      - src/database.json
    expire_in: never
  only:
    - development
  except:
    refs:
      - tags


deploy:
  stage: deploy
  script:
    - apt-get update
    - apt-get install -y curl git

    - LAST_TAG=$(git describe --tags --abbrev=0)
    - MAJOR="${LAST_TAG#v}"
    - MAJOR="${MAJOR%%.*}"
    - LAST_VERSION="${LAST_TAG##*.}"
    - LAST_MILESTONE="${LAST_TAG#v*.}"
    - LAST_MILESTONE="${LAST_MILESTONE%%.*}"
    - if [[ "$MILESTONE" != "$LAST_MILESTONE" ]]; then LAST_VERSION=0; fi;
    - NEW_VERSION=$((LAST_VERSION + 1))
    - NEW_TAG="v$MAJOR.$MILESTONE.$NEW_VERSION"

    - git remote remove origin
    - git remote add origin "https://oauth2:${CI_DEPLOY_TOKEN}@git.mif.vu.lt/emotionless/sentiment-analysis"
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_LOGIN"
    - git tag -a $NEW_TAG -m "Auto generated by gitlab-ci.yml"
    - git push origin $NEW_TAG

    - RELEASE_DATE=$(date +'%Y-%m-%dT%H:%M')
    - DESCRIPTION="Sentiment Analysis $NEW_TAG release on $RELEASE_DATE. Triggered by $CI_COMMIT_SHORT_SHA"
    - EXECUTABLE_URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/build/SentimentAnalysis?job=upload-artifacts"
    - DATABASE_URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/jobs/artifacts/$CI_COMMIT_REF_NAME/raw/src/database.json?job=upload-artifacts"
    - echo "$EXECUTALBE_URL"
    - echo "$DATABASE_URL"
    - >
      curl --request POST
      --header "PRIVATE-TOKEN: $CI_DEPLOY_TOKEN"
      --form "name=$NEW_TAG"
      --form "description=$DESCRIPTION"
      --form "tag_name=$NEW_TAG"
      --form "assets[links][][name]=Executable"
      --form "assets[links][][url]=$EXECUTABLE_URL"
      --form "assets[links][][name]=database.json"
      --form "assets[links][][url]=$DATABASE_URL"
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"
  only:
    - development
  except:
    refs:
      - tags
